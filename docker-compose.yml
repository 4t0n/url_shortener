version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - my_network

  app:
    build: .
    container_name: url_shortener_app
    ports:
      - "8080:80"
    volumes:
      - ./app:/app/app
      - alembic_migrations:/app/alembic/versions/
    env_file:
      - .env
    depends_on:
      - db
      - db_test
    networks:
      - my_network
  
  db_test:
    image: postgres:15
    container_name: postgres_test_db
    restart: always
    ports:
      - "5433:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${TEST_DATABASE_USER}
      POSTGRES_PASSWORD: ${TEST_DATABASE_PASSWORD}
      POSTGRES_DB: ${TEST_DATABASE_NAME}
    volumes:
      - pgdata_test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TEST_DATABASE_USER} -d ${TEST_DATABASE_NAME}"]
      interval: 10s
      retries: 5
      start_period: 10s
    networks:
      - my_network

volumes:
  pgdata:
  alembic_migrations:
  pgdata_test:

networks:
  my_network:
    driver: bridge